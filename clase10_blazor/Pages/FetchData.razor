@page "/fetchdata"
@inject HttpClient Http

@if (_products is null)
{
    <h2>Cargando productos...</h2>
}
else
{
    <h2>Productos cargados</h2>
<article>
  <h2 class="f3 fw4 pa3 mv0">Listado de productos</h2>
  <div class="cf pa2">
    @foreach(var product in _products)
    {
    <div class="fl w-50 w-25-m w-20-l pa2" >
      <a href="https://geo.itunes.apple.com/us/album/blonde/id1146195596?at=1l3vqFJ&mt=1&app=music" class="db link dim tc">
        <img src="@product.items[0].images[0].imageUrl" alt="" class="w-100 db outline black-10"/>
        <dl class="mt2 f6 lh-copy">
          <dt class="clip">Producto</dt>
          <dd class="ml0 black truncate w-100">@product.productName</dd>
          <dt class="clip">Marca</dt>
          <dd class="ml0 gray truncate w-100">@product.brand</dd>
        </dl>
      </a>
    </div>
    }
  </div>
</article>

    @* <ul>
        <li>@product.productName - @product.items[0].images[0].imageUrl</li>
    }
    </ul> *@
}

@code {
    private List<ProductInfo> _products;

    protected override async Task OnInitializedAsync()
    {
        _products = await Http.GetFromJsonAsync<List<ProductInfo>>("list-products");
        Console.WriteLine(_products);
    }

    public class ProductInfo
    {
        public string productId {get;set;}
        public string productName {get;set;}
        public string brand {get;set;}
        public string linkText {get;set;}        
        public ItemData[] items {get;set;}
    }

    public class ItemData{

        public string itemId {get;set;}
        public string nameComplete {get;set;}
        public string ean {get;set;}
        public ItemImage[] images {get;set;}

    }

    public class ItemImage {
        public string imageUrl {get;set;}
    }


}
